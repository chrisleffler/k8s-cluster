- name: Wait for machines to start
  hosts: all
  gather_facts: no
  tasks:
    - name: Waiting...
      wait_for_connection:

- name: Update OS
  hosts: all
  gather_facts: no
  become: yes
  tasks:
    - name: Upgrade all packages
      apt:
        upgrade: full
        update_cache: true
    - name: Install packages
      apt:
        name:
          - nfs-common
    - name: Set hostname
      hostname:
        name: "{{ansible_host}}"
    - name: Set /etc/hostname
      copy:
        content: "{{ansible_host}}"
        dest: /etc/hostname

- name: Install Dockers
  hosts:
    - masters
    - workers
  gather_facts: no
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name:
          - docker.io
        update_cache: true
    - name: Start Docker
      systemd:
        name: docker
        state: restarted
        enabled: yes
        daemon_reload: yes
    - name: Create docker group
      group:
        name: docker
        state: present
    - name: Add user to docker group
      user:
        name: "{{ansible_user}}"
        group: docker

- name: Install Kubernetes binaries
  hosts:
    - masters
    - workers
  gather_facts: no
  become: yes
  tasks:
    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - name: Add Kubernetes repo
      apt_repository:
        repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet={{kube_version}}-00
          - kubeadm={{kube_version}}-00
          - kubectl={{kube_version}}-00
        update_cache: yes

- name: Kubernetes requirements
  hosts:
    - masters
    - workers
  gather_facts: no
  become: yes
  tasks:
    - name: Sets Docker cgroup driver to systemd
      copy:
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }
        dest: /etc/docker/daemon.json
    - name: Create systemd directory
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
        daemon_reload: yes

- name: Calico requirements
  hosts:
    - masters
    - workers
  gather_facts: no
  become: yes
  tasks:
    - name: Enable RPF strict mode - net.ipv4.conf.all.rp_filter=1
      sysctl:
        name: net.ipv4.conf.all.rp_filter
        value: "1"

- name: Init master
  hosts: master
  tasks:
    - name: Run Kubeadm
      become: yes
      shell: kubeadm init --kubernetes-version={{kube_version}} --service-cidr=172.16.0.0/12 --pod-network-cidr=192.168.0.0/16 --apiserver-cert-extra-sans={{ansible_facts.fqdn}},master.{{domain}},{{ansible_facts.all_ipv4_addresses | join(',')}}
      register: kubeadm_init
      args:
        creates: /etc/kubernetes/admin.conf
    - name: kubeadm init output
      debug:
        var: kubeadm_init.stderr_lines
    - name: Install Calico
      become: yes
      shell: kubectl apply -f https://docs.projectcalico.org/v3.15/manifests/calico.yaml --kubeconfig=/etc/kubernetes/admin.conf
    - name: Get Kubernets join cluster command
      become: yes
      shell: kubeadm token create --print-join-command
      register: join_cmd
    - name: Export join command
      set_fact:
        join_cmd: "{{ join_cmd.stdout }}"

- name: Join master
  hosts: workers
  gather_facts: no
  become: yes
  tasks:
    - name: Joining cluster
      shell: "{{ hostvars['master'].join_cmd }}"

- name: Opens kubelet read only port
  hosts:
    - masters
    - workers
  gather_facts: no
  become: yes
  tasks:
    - name: Adds the option to the config.yaml file
      lineinfile:
        path: /var/lib/kubelet/config.yaml
        line: "readOnlyPort: 10255"
    - name: Restart kubelet
      systemd:
        name: kubelet
        state: restarted

- name: Set Kubernets kubeconfig on master
  hosts: master
  gather_facts: no
  tasks:
    - name: Generates the kubeconfig content
      shell: kubeadm alpha kubeconfig user --client-name=alex --org=system:masters
      become: yes
      register: kubeconfig
    - name: Creates server .kube directory
      file:
        path: /home/ubuntu/.kube
        state: directory
    - name: Create kubeconfig file
      copy:
        content: "{{ kubeconfig.stdout }}"
        dest: /home/ubuntu/.kube/config
    - name: Copy kubeconfig to local machine
      copy:
        content: "{{ kubeconfig.stdout }}"
        dest: /Users/alex.fernandes/.kube/config
      delegate_to: localhost
    - name: Updates the server url to use the public DNS host name
      shell: kubectl config set clusters.kubernetes.server https://master.{{domain}}:6443
      delegate_to: localhost

- name: Installs and configure Squid
  hosts: proxies
  gather_facts: no
  become: yes
  tasks:
    - name: Install Squid
      apt:
        name:
          - squid
        update_cache: true
    - name: Copy squid.conf
      copy:
         content: |-
            http_access allow all
            http_port 3128
         dest: /etc/squid/squid.conf
    - name: Restart Squid
      systemd:
        name: squid
        state: restarted

- name: Set up system wide proxies
  hosts:
    - masters
    - workers
  gather_facts: no
  become: yes
  tasks:
    - name: Set http_proxy
      lineinfile:
        path: /etc/environment
        regexp: '^HTTP_PROXY='
        line: HTTP_PROXY=http://proxy.{{domain}}:3128/
    - name: Set https_proxy
      lineinfile:
        path: /etc/environment
        regexp: '^HTTPS_PROXY='
        line: HTTPS_PROXY=http://proxy.{{domain}}:3128/
    - name: Set no_proxy
      lineinfile:
        path: /etc/environment
        regexp: '^NO_PROXY='
        line: NO_PROXY=.{{domain}}
