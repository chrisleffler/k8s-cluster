- name: Update K8s controle plane configs
  hosts:
    - masters
  gather_facts: no
  become: yes
  tasks:
    - name: Check if stash file exists
      stat: 
        path:  /etc/kubernetes/manifests.stash
      register: stash
    - name: Stash original static pods
      when: stash.stat.exists == false
      copy:
        src: /etc/kubernetes/manifests/
        dest: /etc/kubernetes/manifests.stash/
        remote_src: yes
        directory_mode: yes

    - name: Copy stash to staging
      copy:
        src: /etc/kubernetes/manifests.stash/
        dest: /etc/kubernetes/manifests.staging/
        remote_src: yes
        directory_mode: yes

    - name: Create config directory
      file:
        path: /etc/kubernetes/kube-apiserver
        state: directory
        mode: u+rwx,g+rx,o+rx
    - name: Create volume
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*volumes:'
        line: |2-
            - hostPath:
                path: /etc/kubernetes/kube-apiserver
                type: DirectoryOrCreate
              name: kube-apiserver-config
    - name: Mount volume
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*volumeMounts:'
        line: |2-
              - mountPath: /etc/kubernetes/kube-apiserver
                name: kube-apiserver-config

    - name: Enable PodSecurityPolicy admission plugin
      replace:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        regexp: '(--enable-admission-plugins=.+)$'
        replace: '\1,PodSecurityPolicy'

    - name: Create audit config
      copy:
        dest: /etc/kubernetes/kube-apiserver/audit.yaml
        mode: u+rwx,g+rx,o+rx
        content: |
          apiVersion: audit.k8s.io/v1
          kind: Policy
          rules:
          - level: RequestResponse
            resources:
            - group: ""
              resources:
              - secrets
              - namespaces
              - pods
              - services
              - serviceaccounts
          - level: Metadata
    - name: Enable Audit
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*- kube-apiserver'
        line: |2-
              - --audit-policy-file=/etc/kubernetes/kube-apiserver/audit.yaml
              - --audit-log-path=-
              - --audit-log-maxage=30 # CIS 1.2.23
              - --audit-log-maxbackup=10 # CIS 1.2.24
              - --audit-log-maxsize=100 # CIS 1.2.25

    - name: Create encryption config
      copy:
        dest: /etc/kubernetes/kube-apiserver/encryption.yaml
        mode: u+rwx,g+rx,o+rx
        content: |
          apiVersion: apiserver.config.k8s.io/v1
          kind: EncryptionConfiguration
          resources:
            - resources:
              - secrets
              providers:
              - aescbc:
                  keys:
                  - name: key1
                    secret: UM6Q2gjLY7T+UdL9doLg6geXkWOTJ1Ccl2nJm2OO/Os=
              - identity: {}
    - name: Enable encryption
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*- kube-apiserver'
        line: '    - --encryption-provider-config=/etc/kubernetes/kube-apiserver/encryption.yaml'

    - name: Enable json loging for API Server
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*- kube-apiserver'
        line: '    - --logging-format=json'
    - name: Enable json loging for Controller Manager
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-controller-manager.yaml
        insertafter: '\s*- kube-controller-manager'
        line: '    - --logging-format=json'
    - name: Enable json loging for Scheduler
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-scheduler.yaml
        insertafter: '\s*- kube-scheduler'
        line: '    - --logging-format=json'

    - name: CIS 1.2.21 Ensure that the --profiling argument is set to false
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*- kube-apiserver'
        line: '    - --profiling=false'
    - name: CIS 1.3.2 Ensure that the --profiling argument is set to false
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-controller-manager.yaml
        insertafter: '\s*- kube-controller-manager'
        line: '    - --profiling=false'
    - name: CIS 1.4.1 Ensure that the --profiling argument is set to false
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-scheduler.yaml
        insertafter: '\s*- kube-scheduler'
        line: '    - --profiling=false'

    # - name: Ensures user etcd exists
    #   user:
    #     name: etcd
    # - name: CIS 1.1.12 Ensure that the etcd data directory ownership is set to etcd:etcd
    #   file:
    #     path: /var/lib/etcd
    #     owner: etcd
    #     group: etcd
    #     recurse: yes
    
    - name: CIS 1.2.6 Ensure that the --kubelet-certificate-authority argument is set as appropriate
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*- kube-apiserver'
        line: '    - --kubelet-certificate-authority=/etc/kubernetes/pki/ca.crt'

    - name: CIS 1.2.35 Edit the API server pod specification file /etc/kubernetes/manifests/kube-apiserver.yaml on the master node and set the below parameter.
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*- kube-apiserver'
        line: '    - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384'

    - name: CIS 1.3.1 Edit the Controller Manager pod specification file /etc/kubernetes/manifests/kube-controller-manager.yaml on the master node and set the --terminated-pod-gc-threshold to an appropriate threshold
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-controller-manager.yaml
        insertafter: '\s*- kube-controller-manager'
        line: '    - --terminated-pod-gc-threshold=10'

    - name: CIS 1.2.6 Ensure that the --kubelet-certificate-authority argument is set as appropriate
      lineinfile:
        path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
        insertafter: '\s*- kube-apiserver'
        line: '    - --kubelet-certificate-authority=/etc/kubernetes/pki/ca.crt'

    ## When enabled I can't ssh with msg
    ## Error from server: error dialing backend: x509: cannot validate certificate for 10.0.1.109 because it doesn't contain any IP SANs
    # - name: CIS 1.2.6 Ensure that the --kubelet-certificate-authority argument is set as appropriate
    #   lineinfile:
    #     path: /etc/kubernetes/manifests.staging/kube-apiserver.yaml
    #     insertafter: '\s*- kube-apiserver'
    #     line: '    - --kubelet-certificate-authority=/etc/kubernetes/pki/ca.crt'

    - name: Replace static pods with staging
      copy:
        src: /etc/kubernetes/manifests.staging/
        dest: /etc/kubernetes/manifests/
        remote_src: yes
        directory_mode: yes
    - name: Remove staging
      file:
        path: /etc/kubernetes/manifests.staging
        state: absent

- name: Update kubelet configs
  hosts:
    - masters
    - workers
  gather_facts: no
  become: yes
  tasks:
    - name: Enable json loging for Kubelet
      replace:
        path: /var/lib/kubelet/kubeadm-flags.env
        regexp: '^KUBELET_KUBEADM_ARGS="(.*)$'
        replace: 'KUBELET_KUBEADM_ARGS="--logging-format=json \1'
        backup: yes
    - name: Restart kubelet service
      service:
        name: kubelet
        state: restarted
